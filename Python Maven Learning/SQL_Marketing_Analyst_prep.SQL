1. Customer Segmentation
You have a table called customers with the following columns:

customer_id
acquisition_channel (e.g., "Organic", "Paid Search", "Social Media")
sign_up_date
total_spent == Assuming its total 

Question: Write a SQL query to segment customers into three categories based on their total spending:

"High Value" for customers who spent more than $500.
"Medium Value" for customers who spent between $100 and $500.
"Low Value" for customers who spent less than $100.


SELECT 
	CASE 
		WHEN total_spend >= 500 THEN 'High Value' 
		WHEN total_spend >= 100 AND total_spend <= 500 THEN 'Medium Value'
		WHEN total_spend < 100 THEN 'Low Value'
	END AS Cust_Segment,
	COUNT(distinct customer_id) AS total_cust_by_seg
FROM customers
GROUP BY Cust_Segment
ORDER BY total_cust_by_seg DESC


2. Channel Performance Analysis
You have a table called marketing_campaigns with the following columns:

campaign_id
channel (e.g., "Email", "Google Ads", "Facebook Ads")
clicks
conversions
spend

Question: Write a SQL query to calculate the Cost Per Conversion (CPC) for each marketing channel. Sort the results by CPC in ascending order.

CPC = spend / clicks 

SELECT 
	channel,
	SUM(spend) / SUM(clicks) as CPC
FROM marketing_campaigns
GROUP BY channel 
ORDER BY CPC ASC;

3. Cohort Analysis
You have a table called purchases with the following columns:

customer_id
purchase_date
amount

Question: Write a SQL query to calculate the total revenue generated by customers who 
signed up in the first quarter of 2024 (January, February, March), broken down by month of purchase.

- total revenue - SUM(revenue)
- 2024-01-01 - Date_format(date, '%y-%q')

SELECT 
	date_format(purchase_date, '%m') as Month,
	Count(DISTINCT customer_id) total_signups,
	SUM(amount) as total_Revenue
FROM purchases
Where Year(purchase_date) = 2024 AND Month(purchase_date) IN (1,2,3)
GROUP BY date_format(purchase_date, '%m')
ORDER BY Month ASC

4. Churn Rate Calculation
You have a table called subscriptions with the following columns:

subscription_id
customer_id
start_date
end_date (nullable, indicating the subscription is still active if null)

Question: Write a SQL query to calculate the churn rate for the month of July 2024. Churn rate is defined as the percentage of customers who canceled their subscriptions in July 2024 out of the total number of customers who had active subscriptions at the beginning of the month.

001 | 01 | 01-06-2024 | Null
001 | 02 | 01-06-2024 | 31-01-2024

-July 2024 | 20%

WITH CTE as 
(
	SELECT 
		Month(start_date) as Month,
		COUNT(CASE 
			WHEN end_date IS NOT NULL THEN customer_id
		END) AS cancel_subs,
		COUNT(DISTINCT customer_id) as active_begining
	FROM subscriptions
	WHERE Month(start_date) = 7 and Year(start_date) = 2024
	GROUP BY 1
)
SELECT 
	Month,
	ROUND((cancel_subs/NULLIF(active_begining,0))*100, 2) as Churn_Rate
FROM CTE
;

5. User Retention
You have a table called user_activity with the following columns:

user_id
login_date

Question: Write a SQL query to calculate the percentage of users who logged in within 7 days of their first login. Consider only users who signed up in the last month.
user_id	 login log  	first_login
	01 | 01-01-2024  | 01-01-2024
	01 | 04-01-2024  | 01-01-2024 = 3
	02 | 05-01-2024  | 05-01-2024 = 0

With Log as
(
	SELECT
		User_id,
		Min(login_date) Over(Partition by USER_ID) as first_login,
		login_date
	FROM user_activity
	WHERE Month(login_date) = 7 and YEAR(login_date) = 2024
)
SELECT 
	COUNT(DISTINCT User_id) as users_with_logins_within_7_days
FROM Log
WHERE DATE_DIFF('day',login_date, first_login) <= 7 and DATE_DIFF('day',login_date, first_login) > 0
;


1. Quarterly Sales Growth
Question: Write a query to calculate the quarterly growth rate in sales compared to the previous quarter for each product in 2024. Return the product ID, the sales amount for each quarter, and the growth rate.
product_id, quarter, sales_amount, and growth_rate.

P1 | Q1 | 232 | 234
P1 | Q2 | 234 | null
P2 | Q1 | 323
P2 | Q2 | 432 

WITH sales as 
(
	SELECT 
		product_id,
		date_format(sales_date,'%Q') AS Quarter,
		sum(sales_amount) as sales_total
	FROM sales 
	
	GROUP BY product_id, Quarter
	ORDER BY Quarter ASC
), sales_by_q as 
(
	SELECT 
		product_id,
		Quarter,
		sales_total ,
		LAG(sales_total, 1) over(PARTITION BY product_id ORDER BY Quarter ASC) as pre_q_sales
	FROM sales 
)
SELECT 
	product_id,
	Quarter,
	(sales_total - pre_q_sales )/pre_q_sales AS quarterly_growth
FROM sales_by_q
WHERE cur_q_sales IS NOT NULL
GROUP BY product_id, Quarter
ORDER BY Quarter ASC


2. User Subscription Duration
Question: Write a query to calculate the average subscription duration (in days) for users who signed up in the first quarter of 2024. Use a CTE to calculate the duration for each subscription.

subscription_id: A unique ID for each subscription.
user_id: A unique ID for each user.
start_date: The date the subscription started.
end_date:  The date the subscription ended. If the subscription is still active, this value could be NULL. 

SELECT 
	subscription_id,
	user_id,
	date_diff('day', end_date, start_date) AS days_diff
FROM subscription
WHERE quarter(start_date) = 1 and year(start_date) = 2024


3. Top Performing Products
Question: Write a query to find the top 5 products by total revenue for the first half of 2024. Return the product ID, total revenue, and rank the products by revenue.

4. Monthly Active Users Retention
Question: Write a query to find the retention rate of users who logged in in January 2024 and logged in again in any subsequent month of 2024. Return the number of retained users and the month they logged in again.

5. Customer Lifetime Value
Question: Write a query to calculate the lifetime value (LTV) of customers who made their first purchase in 2024. Use a CTE to calculate the total revenue per customer and then calculate the average LTV.

6. Sales by Weekday
Question: Write a query to find the total sales amount for each day of the week in 2024. Return the weekday name and total sales amount.

7. Return Rate Analysis
Question: Write a query to calculate the return rate of products based on the number of returns compared to the number of sales for each product in 2024. Return the product ID, total returns, total sales, and return rate.

8. Customer Churn Rate
Question: Write a query to calculate the churn rate of customers who had an active subscription at the end of each month in 2024 but did not renew in the following month. Return the month, number of churned customers, and churn rate.

9. Monthly Revenue Comparison
Question: Write a query to compare the monthly revenue of 2024 with the same months in 2023. Return the month, revenue for 2024, revenue for 2023, and the percentage change.

10. User Login Frequency
Question: Write a query to find the average number of logins per user per month in 2024. Return the month and average logins per user.

11. Sales and Discounts Analysis
Question: Write a query to find the average discount percentage given on sales in 2024. Use a CTE to calculate total sales and total discounts, then find the average discount percentage.

12. Subscription Renewal
Question: Write a query to find users who renewed their subscription within 30 days of the expiration date in 2024. Return the user ID, subscription ID, and renewal date.

13. Product Performance Metrics
Question: Write a query to calculate the average sales amount per product per month in 2024, and return the product ID, month, and average sales amount.

14. User Engagement Analysis
Question: Write a query to identify users who logged in at least once a week throughout 2024. Return the user ID and the number of weeks they were active.

15. Sales Trends by Region
Question: Write a query to compare sales trends by region for the first half of 2024. Return the region, total sales, and percentage change compared to the second half of 2024.

